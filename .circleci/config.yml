version: 2.1

executors:
  python-js:
    docker:
      - image: cimg/python:3.13-browsers
    working_directory: ~/project

orbs:
  git-shallow-clone: guitarrapc/git-shallow-clone@2.8.0

commands:
  use-updated-uv:
    steps:
      - run:
          name: Use updated uv
          command: |
            echo 'export PATH=~/bin:$PATH' >> $BASH_ENV
            echo $PATH
            which uv
            uv --version
  enable-github-pushing:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7b:0b:2c:9f:fb:18:db:35:8e:f4:3d:49:73:37:ee:c4"
      - run:
          name: Add GitHub to known hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Set KuÅ™e as the Git user
          command: |
            git config user.email "kure@junior.guru"
            git config user.name "KuÅ™e"

jobs:
  # Requires:
  #
  # $CIRCLECI_API_KEY
  install:
    executor: python-js
    steps:
      - git-shallow-clone/checkout
      - restore_cache:
          key: deps-{{ checksum "uv.lock" }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install uv >= 0.8
          command: |
            uv --version
            uv self update
            uv --version
            mkdir -p ~/bin
            cp "$(which uv)" ~/bin/uv
      - run:
          name: Install Python dependencies
          command: |
            uv sync
            uv cache prune --ci
      - run:
          name: Install browser
          command: uv run playwright install firefox
      - run:
          name: Install JavaScript dependencies
          command: npm ci
      - run:
          name: Cancel previous builds
          command: |
            uv run jg cancel-previous-builds
      - save_cache:
          key: deps-{{ checksum "uv.lock" }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache/uv
            - ~/.cache/ms-playwright
            - ./node_modules
      - restore_cache:
          key: cache-v2-{{ .Branch }}
      - run:
          name: Snapshot files
          command: uv run jg data snapshot
      - persist_to_workspace:
          root: "~"
          paths:
            - bin
            - .cache/uv
            - .cache/ms-playwright
            - project

  test:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Test
          command: uv run jg test --verbose

  # Requires:
  #
  # $GOOGLE_SERVICE_ACCOUNT
  # $FIOBANK_API_KEY
  # $DISCORD_API_KEY
  # $MEMBERFUL_API_KEY
  # $MEMBERFUL_PASSWORD
  # $VIDEO_OUTSOURCING_TOKEN
  # $FAKTUROID_API_KEY
  # $OPENAI_API_KEY
  # $APIFY_API_KEY
  # $STRIPE_API_KEY
  # $GITHUB_API_KEY
  # $MAPYCZ_API_KEY
  sync-1:
    executor: python-js
    resource_class: large
    parallelism: 22
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Cache stats
          command: uv run jg cache tags
      - run:
          name: Sync data
          command: |
            uv run jg sync $(if [[ "$CIRCLE_BRANCH" == "main" ]]; then echo "--allow-mutations"; else echo ""; fi) ci
      - run:
          name: Prepare changed files for persisting
          command: uv run jg data persist $CIRCLE_NODE_INDEX --move
      - persist_to_workspace:
          root: "~"
          paths:
            - project/persist-to-workspace

  data-1:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Load data
          command: uv run jg data load --move
      - run:
          name: Fix cache
          command: |
            uv run jg cache fix
            uv run jg cache tags
      - persist_to_workspace:
          root: "~"
          paths:
            - project/.cache
            - project/src/jg/coop/data
            - project/src/jg/coop/images

  # Requires:
  #
  # $GOOGLE_SERVICE_ACCOUNT
  # $DISCORD_API_KEY
  # $MEMBERFUL_API_KEY
  sync-2:
    executor: python-js
    resource_class: large
    parallelism: 9
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Snapshot files
          command: uv run jg data snapshot
      - run:
          name: Cache stats
          command: uv run jg cache tags
      - run:
          name: Sync data
          command: |
            uv run jg sync $(if [[ "$CIRCLE_BRANCH" == "main" ]]; then echo "--allow-mutations"; else echo ""; fi) ci
      - run:
          name: Prepare changed files for persisting
          command: uv run jg data persist $CIRCLE_NODE_INDEX --move
      - persist_to_workspace:
          root: "~"
          paths:
            - project/persist-to-workspace

  data-2:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Load data
          command: uv run jg data load --move
      - run:
          name: Fix cache
          command: |
            uv run jg cache fix
            uv run jg cache tags
      - save_cache:
          key: cache-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - .cache
            - src/jg/coop/images/posters-events
            - src/jg/coop/images/posters-sponsors
            - src/jg/coop/images/posters-podcast
            - src/jg/coop/images/thumbnails
      - persist_to_workspace:
          root: "~"
          paths:
            - project/src/jg/coop/data
            - project/src/jg/coop/images
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
          steps:
            - enable-github-pushing
            - run:
                name: Save to GitHub
                command: |
                  uv run jg save-changes src/jg/coop/data/transactions.jsonl --message="record transactions ðŸ“ŠðŸ’°"
                  uv run jg save-changes src/jg/coop/data/members.jsonl src/jg/coop/data/followers.jsonl src/jg/coop/data/jobs.jsonl --message="record stats ðŸ“ŠðŸ’³"

  web:
    executor: python-js
    resource_class: large
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Build web
          command: uv run jg web build
      - run:
          name: Post-process web
          command: uv run jg web post-process
      - persist_to_workspace:
          root: "~"
          paths:
            - project/public

  tidy:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Reset repo
          command: uv run jg reset-repo
      - run:
          name: Tidy up code and images
          command: uv run jg tidy
      - enable-github-pushing
      - run:
          name: Save to GitHub
          command: uv run jg save-changes . --message="tidy up! ðŸ’…"

  backup:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run:
          name: Backup data
          command: uv run jg backup data
      - run:
          name: Encrypt data
          command: uv run jg backup encrypt
      - run:
          name: Backup Discord
          command: uv run jg backup discord
      - store_artifacts:
          path: ./backup.tgz.gpg

  deploy-web:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - enable-github-pushing
      - run:
          name: Deploy to GitHub Pages
          command: uv run jg deploy

  check-docs:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run: uv run jg check-docs --no-build

  check-links:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - run:
          name: Download Lychee
          command: wget "https://github.com/lycheeverse/lychee/releases/download/lychee-v0.18.1/lychee-x86_64-unknown-linux-musl.tar.gz" -O "lychee.tar.gz"
      - run:
          name: Extract Lychee
          command: tar -xzvf "lychee.tar.gz" && chmod +x "lychee"
      - run:
          name: Lychee version
          command: ./lychee --version
      - run:
          name: Check links
          command: ./lychee public

  check-bot:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run: uv run jg check-bot

  check-sponsors:
    executor: python-js
    steps:
      - attach_workspace:
          at: "~"
      - use-updated-uv
      - run: uv run jg check-sponsors

workflows:
  push:
    jobs:
      - install
      - test:
          requires:
            - install
      - sync-1:
          requires:
            - install
      - data-1:
          requires:
            - sync-1
      - sync-2:
          requires:
            - data-1
      - data-2:
          requires:
            - sync-2
      - web:
          requires:
            - data-2
      - check-docs:
          requires:
            - web
      - deploy-web:
          filters:
            branches:
              only:
                - main
          requires:
            - web
            - test

  nightly:
    jobs:
      - install
      - check-bot:
          requires:
            - install
      - check-sponsors:
          requires:
            - install
      - sync-1:
          requires:
            - install
      - data-1:
          requires:
            - sync-1
      - sync-2:
          requires:
            - data-1
      - data-2:
          requires:
            - sync-2
      - web:
          requires:
            - data-2
      - backup:
          requires:
            - web
      - check-links:
          requires:
            - deploy-web
      - deploy-web:
          requires:
            - web
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - main

  nightly-tidy:
    jobs:
      - install
      - tidy:
          requires:
            - install
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - main
